:: CTF 6 {"position":"600,5000","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css">

(set: $ctf6_code to "function showTab(input) {
	var picID;

	if (input.length == 1) {
		picID = input;
	} else {
		picID = input.substring(1, 0);
	}

	var html = \"Image \" + picID + \"<br>\";
	html += \"< img src='../../img/ctf6/\" + input + \".jpg' />\";
	html += \"< /br>\"
	document.getElementById(picID).innerHTML = html;

	/*ignore this in the challenge*/
	window.localStorage.setItem('picID', input);

	var i;
	var x = document.getElementsByClassName(\"animals\");

	for (i = 0; i < x.length; i++) {
	  x[i].style.display = \"none\";  
	}
	document.getElementById(picID).style.display = \"block\";

	/*ignore this in the challenge*/	
	parent.postMessage(\"ctf6_url_\" + input, \"*\");
}
")

(set: _info to "To pass this challange you need to inject JavaScript code in this page. 
This will require you to have a look into the source code. 
To do so, please use the light blue code button on the right. 
This time around there is no direct user input through a login page, so try to figure out another input possibility to inject a XSS. 
After you execute XSS successfully, you will be automatically redirected to the next page.")

(if: $ctfs contains "ctf6")[]
(else:)[(alert: _info)]

<script> 
  setup.ctf6_reset();
  setup.all();
</script>

<h1>CTF 6 - XSS</h1>

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>

<div class="webbrowser">
  <div id="tab">
    <div class="controls">
      <span class="url label">URL:</span>
      <input id="input" class="urlbar input" type="text" value="https://twine.ctf/ctf6.html">
      <input id="surfbutton" class="button is-success urlbutton" type="Submit" onclick="setup.ctf6_updateFrame()" value="Reload">
    </div>
    <iframe scrolling="yes" src="src/static/ctf6/u.html" title="Google"></iframe>
  </div>
</div>

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>

<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>

<div class="buttons">
  <div class="btn-pos5">
  	(if: $playingStory is true)[
      [[<button class='home-btn-background'></button>->MainPage]]]
        (else:)[
      [[<button class='home-btn-background'></button>->CTFs]]]
  </div>
  <div class="btn-pos4">
    (link-repeat: "<button class=\"code-btn-background\"></button>")[(alert: "
      <pre><code id=\"code\" class=\"language-javascript\"></code></pre>
      <script>
        setup.ctf6_showCode();
        hljs.highlightAll();
      </script>")]
  </div>
  <div class="btn-pos3">
    (link-repeat: "<button class=\"help-btn-background\"></button>")[(alert: _info)]
  </div>
  <div class="btn-pos2">
    (link-repeat: "<button class=\"hint-btn-background\"></button>")[(alert: "The URL hash parameter is used for choosing one of the three images. Maybe its something you can use for injecting your script.")]
  </div>
  <div class="btn-pos1">
    (link-repeat: "<button class=\"hint-btn-background\"></button>")[(alert: "Here you can't find a text field to execute an XSS injection. However, there are other methods to do so. Find them out.")]
  </div>
</div>

<style>
  @import url("https://fonts.cdnfonts.com/css/ocr-a-extended");

  /* -- Twine overrides -- */

  tw-story {
    background-image: url("src/img/general/ctf/pc_rahmen.png");
    padding: inherit;
    float: initial;
    width: inherit;
    height: inherit;
  }

  tw-passage {
    margin-left: 17%;
    width: 70%;
    height: 100%;
    padding: 1.5%;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.2rem;
    color: #000;
  }

  tw-story tw-consecutive-br {
    height: 1.7% !important;
  }

  /* -- General CSS -- */

  html {
    overflow-y: hidden !important; /* Disable scroll */
  }

  br {
    max-height: 0px;
    visibility: hidden;
    display: none;
  }

  h1 {
    font-size: 3rem !important;
    font-family: "OCR A Extended", sans-serif;
    color: #9b9b9b;
  }

  .webbrowser {
    float: inherit;
    width: 64%;
    height: 52%;
    margin-left: 15.5%;

    border: 2px solid black;
    background: white;
  }

  #tab {
    float: inherit;
    width: 100%;
    height: 100%;
    background: url("src/img/ctf4/webbrowser_header.PNG") 0 0 no-repeat;
    background-repeat: repeat-x;
    border: 1px solid #333;
  }

  .url {
    padding: 0.1em;
    align-self: center;
  }

  .controls {
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;
    display: flex;
    margin-top: 47px;
    padding: 2px;
  }

  .urlbutton {
    margin-left: auto;
    align-self: center;
    padding-right: 1em;
  }

  .input {
    margin-right: auto;
  }

  iframe {
    width: inherit;
    height: inherit;
  }

  .buttons {
    display: flex;
    flex-direction: column;
    position: fixed;
    right: 1rem;
    bottom: 1rem;
  }

  .btn-pos1, .btn-pos2, .btn-pos3, .btn-pos4, .btn-pos5 {
    padding: 0.25rem;
  }
  
  tw-dialog, h1 {
    font-family: "OCR A Extended", sans-serif;
    color: #9b9b9b;
  }
</style>


:: CTF6_end {"position":"800,5000","size":"100,100"}
(unless: $ctfs contains "ctf6")[(set: $ctfs to it + (a: "ctf6"))]

<script>
  setup.ctf6_reset()
</script>

Congratulations you made it!

I hope you learned that an XSS injection does not necessarily require a user input field. There are many ways in which malicious code is successfully injected into a web page. 

Please be careful with user input and always validate it!

(if: $playingStory is true)[
  [[<button class="resumeButton">Resume Story</a>->e.p]]]\
(else:)[
  [[<button class="resumeButton">Back to CTF-Overview->CTFs]]]

<style>
  @import url("https://fonts.cdnfonts.com/css/ocr-a-extended");

  /* -- General CSS --*/

  .resumeButton {
    z-index: 1;
    height: 2.5em;
    width: 8em;

    border: none;
    border-radius: 35px;
    background-color: #f79e00;
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);

    font-size: 1em;
    color: #1e1e1e;
    text-decoration: none;
    text-shadow: 2px 2px 4px #000000;
  }

  .checkFlagButton {
    z-index: 1;
    height: 2.5em;
    width: 8em;

    border: none;
    border-radius: 35px;
    background-color: #f79e00;
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);

    font-size: 1em;
    color: #1e1e1e;
    text-decoration: none;
    text-shadow: 2px 2px 4px #000000;
  }

  * {
    font-family: "OCR A Extended", sans-serif;
    color: #9b9b9b;
  }
</style>

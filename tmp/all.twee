:: StoryTitle
twine-ctf


:: StoryData
{
	"ifid": "DC4F9919-114F-42D0-AD6B-6D66F013AD8C",
	"format": "Harlowe",
	"format-version": "3.3.3",
	"start": "MainPage",
	"zoom": 1
}


:: Story JavaScript [script]
window.setup = window.setup || {};


/*onclick="setup.test()"

setup.test = function() {
	console.log("Hello World");
  	alert("Test");
}
*/

 /*onclick="setup.onLoad()"*/

function eventOnClickHandler(event) {
	var user = btoa(document.getElementById("user").value.replace(/=/g, ""));
    var pass = btoa(document.getElementById("password").value.replace(/=/g, ""));

  	return "d3d3LWFkbWlu" !== user ? alert("Incorrect Username or Password") : "a2V5TWVtb3J5KHN1cGVyU2VjcmV0cGFzc3cwcmQxMjMp" !== pass ? alert("Incorrect Username or Password") : void alert(`Correct Username and Password! \nYour flag is ${atob(pass)}.`)
  
}


setup.start = function() {
	   document.getElementById("ssss").addEventListener("click", eventOnClickHandler);

}

/*   alert("sdfdsf")
   alert(document.getElementById("ssss"));*/


/*
window.onload = function(){
   alert("sdfdsf");
   alert(document.getElementById("ssss"));
};


document.addEventListener("DOMContentLoaded", function(event){
	alert("sdfdsf");
    alert(document.getElementById("ssss"));

});

document.onreadystatechange = function () {
     alert("sdfdsf");

  if (document.readyState == "complete") {
    alert("sdfdsf");
  }
}*/


:: CTF 1 {"position":"800,25","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<!--TODO Link-->

<link rel="stylesheet" href="css/main.css"> 


<script> setup.start(); </script>


<html>
<h1 style="padding:20px">Your forgot your password for your pc, maybe it is possible to find it, somewhere else.  </h1>
<a></a>
<div class="container is-fluid login-contianer">
   <form method="POST" class="box twine-background-login">
      <div class="field">
        <label class="label">Username</label>
        <div class="control">
          <input class="input" id="user" for"username" type="text" placeholder="...">
        </div>
      </div>
      <div class="field">
        <label class="label">Password</label>
        <div class="control">
          <input class="input" id="password" for"password" type="password" placeholder="...">
        </div>
      </div>
      <button id="ssss" class="button is-primary">Sign in</button>
    </form>
  </div>

</html>


:: CTF 2 {"position":"800,175","size":"100,100"}
crf2


:: CTF 3 {"position":"800,325","size":"100,100"}
ctf3


:: MainPage {"position":"175,100","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<style>
#first    {color: red;}
</style>

Hello, Welcome to our litte CTF Challenge Game. In this game you will learn something about same basic CTF Challenges.  Capture the Flag (CTF) is a cybersecurity competition that is used as a test of security skills. 
...
Olea schreib mal was schÃ¶nes
[[Start Story->Story]]

Hello World

<!--Comment Text
<button id="first" class="button is-rounded">Rounded</button>
<button class="button is-primary is-rounded">Rounded</button>
<button class="button is-link is-rounded">Rounded</button>
<button class="button is-info is-rounded">Rounded</button>
<button class="button is-success is-rounded">Rounded</button>
<button class="button is-danger is-rounded">Rounded</button>
-->

Overview of all challanges with explanations:
[[CTF 1->CTF 1]]
[[CTF 2->CTF 2]]
[[CTF 3->CTF 3]]
[[CTF 4->CTF 4]]
[[CTF 5->CTF 5]]
[[CTF 6->CTF 6]]
[[CTF 7->CTF 7]]
[[CTF 8->CTF 8]]
[[CTF 9->CTF 9]]

So soll das, CSS ist der King!
[[<button class="button is-danger is-rounded">Start Challenge 1</button> ->CTF 1]]


:: CTF 4 {"position":"1000,425","size":"100,100"}
<style>


tw-story {
 background: linear-gradient(#330033, #000000);
 margin: 0;
 padding: 50px;
 white-space: normal;
 width: 100%
}

.giant {
 font-size:5.5em;
}

tw-passage {
 width: 80%;
 max-width: 1000px;
 margin:auto;
 padding:20px;
 border: solid #000 0.05em;
 border-radius: 0.2em;
 font-family: Arial, Helvetica, sans-serif;
 font-size:0.9rem; color:#000;
 text-align:left;
 background-color:#a6a6a6;
 box-shadow: #000 0.5em 0.5em 0;
 line-height:20px; 

}

.webbrowser {
  width: 300px;
  min-width: fit-content;
  border: 2px solid black;
  padding-top: 0px;
  padding-right: 0px;
  padding-bottom: 0px;
  padding-left: 0px;
  margin: 20px;
  margin:auto;
  background: white;
  margin: auto;
}

#tab {
    background: url(img/ctf4/webbrowser_header.PNG) 0 0 no-repeat;
    padding: 0px;
    width: 702px;
    margin: 0px;
    border: 1px solid #333;
    border-radius: 8px 4px 0 0;
}

#url {
	
}

.example-controls {
    margin: 0 auto;
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    width: 694px;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;

</style>


Cross-Site Scripting (XSS) is a type of client-side injection attack where a malicious script is injected into a legitimate website and executed.  XSS attacks can occur when an attacker try to uses a web application to send malicious code, usually in the form of a browser-side script, to another end user. 

Vulnerabilities that enable these attacks are widespread and occur wherever a web application ''uses input from a user within the output it generates without validating or encoding it.''

In this challenge yout can try to insert a JavaScript alert() in the frame below. This  JavaScript alert() should start  pop up.


<div class="webbrowser"> 
	<div id="tab">
		<div class="example-controls">
            <span class="url">URL</span>
            <input id="input1" class="urlbar" type="text" value="">
            <input class="urlbutton" type="Submit" value="Go" onclick="updateFrame(1); return false;">
            <iframe src="https://google.de" title="Google"></iframe>
		</div>
    </div>

</div>


:: Story {"position":"175,350","size":"100,100"}
Hier beginnt die Story!

Main Start


:: Story1 {"position":"150,500","size":"100,100"}


:: Story2 {"position":"300,550","size":"100,100"}
[[CTF 3->CTF 3]]


:: CTF 5 {"position":"1150,425","size":"100,100"}
ctf5


:: CTF 6 {"position":"1300,425","size":"100,100"}
ctf6


:: CTF 7 {"position":"1450,425","size":"100,100"}
ctf7


:: CTF 8 {"position":"950,625","size":"100,100"}
ctf8


:: CTF 9 {"position":"950,775","size":"100,100"}
ctf9



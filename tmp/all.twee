:: StoryTitle
twine-ctf


:: StoryData
{
	"ifid": "DC4F9919-114F-42D0-AD6B-6D66F013AD8C",
	"format": "Harlowe",
	"format-version": "3.3.3",
	"start": "initMain",
	"zoom": 0.6
}


:: Story Stylesheet [stylesheet]
.fixedButton1{
            position: fixed;
            bottom: 0px;
            right: 0px; 
            padding: 20px;
        }
.fixedButton2{
            position: fixed;
            bottom: 40px;
            right: 0px; 
            padding: 20px;
        }
.fixedButton3{
            position: fixed;
            bottom:80px;
            right: 0px; 
            padding: 20px;
        }

.addMore{
  border: none;
  width: 32px;
  height: 32px;
  background-color: #eee;
  transition: all ease-in-out 0.2s;
  cursor: pointer;
}
.addMore:hover{
  border: 1px solid #888;
  background-color: #ddd;
}

/*Button redo undo*/
tw-icon{
     color: #ad00d8;
}


/**/
tw-story {
 background-image: url('img/4all/background_landscape.svg');
 background-size: 110%;

  /* Center and scale the image nicely */
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
}


/* Colors Fonts */

:root {
  --font_yellow: #F79E00;
  --font_grey: #9B9B9B;
}

/* Colors Background */
:root {
  --purple: #B200DD;
  --purple_dark: #4B0872;
  --blue: #4316A5;
  --blue_dark: #250777;
  --grey1: #1E1E1E;
  --grey2: #161616;
  --grey3: #141414;
}

.color_purple{
	background-color: var(--purple) !important;
}

#resume-btn{
	background-color: var(--purple) !important;
}


/* TODO override Button and Texts*/


:: Story JavaScript [script]
window.setup = window.setup || {};

if (typeof window.downloadButton == "undefined") {
	window.downloadButton = {
		myEventHandler: function() {
			alert('download file');   
			//actual work here
		}
	};
};

/* # CTF 1 Start */

setup.ctf1 = function() {
	   document.getElementById("ssss").addEventListener("click", eventOnClickHandler);

}

function eventOnClickHandler(event) {
	var user = btoa(document.getElementById("user").value.replace(/=/g, ""));
    var pass = btoa(document.getElementById("password").value.replace(/=/g, ""));

  	return "d3d3LWFkbWlu" !== user ? alert("Incorrect Username or Password") : "a2V5TWVtb3J5KHN1cGVyU2VjcmV0cGFzc3cwcmQxMjMp" !== pass ? alert("Incorrect Username or Password") : void alert(`Correct Username and Password! \nYour flag is ${atob(pass)}.`)
  
}

/* # CTF 1 End */



/* Global Start */

window.addEventListener("message", function(event) {
  if (event.data == "js_inserted_ctf4") {
    ctf4_updateURI(event.data);
    ctf4_levelSucceed();
    return;
  }
  
  if (event.data == "js_inserted_ctf5") {
    ctf5_updateURI(event.data);
    ctf5_levelSucceed();
    return;
  }
  
    if (event.data.startsWith("ctf6_url_")) {
    ctf6_updateURI(event.data);
	console.log("success: " + event.data)
    return;
  }
  
  if (event.data == "js_inserted_ctf6") {
    ctf6_updateURI(event.data);
    ctf6_levelSucceed();
    return;
  }


}, false);

/* Global End */


/* # CTF 4 Start */


setup.ctf4_updateFrame = function (frameNum, url) {
  if (!url) {
  	var urlbar = document.getElementById('input'); 
  	var url = urlbar.value;
  };
    
  // Make sure that the URL points to the frame of the current level
  var frameLink = document.createElement('a');
  frameLink.href = url;

  if (!url.startsWith('https://twine.ctf/ctf4.html') || !url.endsWith) {
       alert("Sorry, I can't open this URL in a frame.");
    	urlbar.value = "https://twine.ctf/ctf4.html";
        var frame = document.querySelector('iframe');
        frame.src = "static/ctf4/s.html"; 
   		//frame.contentWindow.postMessage(url, "*");
       return
  } else {
    var arg = url.replace("https://twine.ctf/ctf4.html", "");
    var frame = document.querySelector('iframe');
    frame.src = "static/ctf4/s.html" + arg; 
    //frame.contentWindow.postMessage(url, "*");
  }

};


function ctf4_updateURI(value) {
  var urlbar = document.getElementById('input');
  urlbar.value = "https://twine.ctf/ctf4.html";
}

function ctf4_levelSucceed() {
	alert("XSS Success");
  	Harlowe.goto("CTF4_end");
}


/* # CTF 4 End */



/* # CTF 5 Start */


setup.ctf5_updateFrame = function (frameNum, url) { 
  if (!url) {
  	var urlbar = document.getElementById('input'); 
  	var url = urlbar.value;
  };
    
  // Make sure that the URL points to the frame of the current level
  var frameLink = document.createElement('a');
  frameLink.href = url;

  if (!url.startsWith('https://twine.ctf/ctf5.html') || !url.endsWith) {
       alert("Sorry, I can't open this URL in a frame.");
    	urlbar.value = "https://twine.ctf/ctf5.html";
        var frame = document.querySelector('iframe');
        frame.src = "static/ctf5/s.html"; 
   		//frame.contentWindow.postMessage(url, "*");
       return
  } else {
    var arg = url.replace("https://twine.ctf/ctf5.html", "");
    var frame = document.querySelector('iframe');
    frame.src = "static/ctf5/t.html" + arg; 
    //frame.contentWindow.postMessage(url, "*");
  }

};



function ctf5_updateURI(value) {
  var urlbar = document.getElementById('input');
  urlbar.value = "https://twine.ctf/ctf5.html";
}

function ctf5_levelSucceed() {
  	Harlowe.goto("CTF5_end");
}


/* # CTF 5 End */



/* # CTF 6 Start */
setup.ctf6_reset = function(){
  window.localStorage.setItem('picID', "1");	
}

setup.ctf6_updateFrame = function (frameNum, url) { 
  if (!url) {
  	var urlbar = document.getElementById('input'); 
  	var url = urlbar.value;
  };
    
  // Make sure that the URL points to the frame of the current level
  var frameLink = document.createElement('a');
  frameLink.href = url;

  if (!url.startsWith('https://twine.ctf/ctf6.html')) {
       alert("Sorry, I can't open this URL in a frame.");
    	urlbar.value = "https://twine.ctf/ctf6.html";
        var frame = document.querySelector('iframe');
        frame.src = "static/ctf6/u.html"; 
       return
  } else {
    var arg = url.replace("https://twine.ctf/ctf6.html#", "");
    var frame = document.querySelector('iframe');
    frame.src = "static/ctf6/u.html"; 
    console.log("arg:" + arg)
    
    /*frame.contentWindow.location.reload(true); In google Chrome “blocked a frame with origin "null" from accessing a cross-origin frame*/
    frame.contentWindow.postMessage(arg,"*")
  }

};



function ctf6_updateURI(value) {
  var urlbar = document.getElementById('input');
  var picID = value.replaceAll("ctf6_url_","");
  urlbar.value = "https://twine.ctf/ctf6.html#" + picID;
}

function ctf6_levelSucceed() {
  	Harlowe.goto("CTF6_end");
}


setup.ctf6_showCode = function() {
  var codeBox = document.getElementById('code'); 
  codeBox.innerHTML = Harlowe.variable("$ctf6_code")

}

/* # CTF 6 End */



/* Marko API */
// Harlowe Macro Framework, by Chapel; version 1.0.2
;!function(){"use strict";var r={major:1,minor:0,patch:2},e=[r.major,r.minor,r.patch].join(".");r.semantic=e,r=Object.freeze(r);var t=$("tw-storydata"),a=Object.freeze({name:t.attr("name"),ifid:t.attr("ifid")}),n=t.attr("format-version"),o=n.split("."),i=Object.freeze({major:o[0],minor:o[1],patch:o[2],semantic:n});window.Harlowe=window.Harlowe||{},window.Harlowe=Object.assign(window.Harlowe,{framework:r,API_ACCESS:Object.freeze({MACROS:require("macros"),STATE:require("state"),CHANGER:require("datatypes/changercommand"),ENGINE:require("engine")}),engine:i,story:a})}(),function(){"use strict";function e(r){return"number"==typeof r||"boolean"==typeof r||"string"==typeof r||null===r||Array.isArray(r)&&r.every(e)||r instanceof Set&&Array.from(r).every(e)||r instanceof Map&&Array.from(r.values()).every(e)||_changer.isPrototypeOf(r)}window.Harlowe=Object.assign(window.Harlowe,{helpers:{isSerialisable:e,isSerializable:e,arrayify:function(r,e){if(r){var t=[].slice.call(r);return void 0!==e&&(t=t.slice(e)),t}},getPassageData:function(r){var e=$('tw-passagedata[name="'+r+'"]');if(e[0])return e}}})}(),function(){"use strict";var n=window.localStorage||!1,o=Harlowe.story.ifid+"-tw-storage";function r(){try{if(!n)throw new Error("storage is inaccessible");n.setItem(o,JSON.stringify({ifid:Harlowe.story.ifid}))}catch(r){console.warn(r)}}function i(r){try{var e;if(n)return e=JSON.parse(n.getItem(o)),r&&r&&"string"==typeof r?e[r]:e;throw new Error("storage is inaccessible")}catch(r){console.warn(r)}}null==i()&&r(),Harlowe.storage={clear:r,save:function(r,e){try{if(!r||"string"!=typeof r)throw new TypeError("cannot store values without a valid storage key");if(void 0===e)throw new TypeError("cannot store undefined values");var t={};if(t[r]=e,!n)throw new Error("storage is inaccessible");var a=i();Object.assign(a,t),n.setItem(o,JSON.stringify(a))}catch(r){console.warn(r)}},load:i,remove:function(r){try{if(!r||"string"!=typeof r)throw new TypeError("cannot store values without a valid storage key");if(!n)throw new Error("storage is inaccessible");var e=i();e.hasOwnProperty(r)&&(delete e[r],n.setItem(o,JSON.stringify(e)))}catch(r){console.warn(r)}}}}(),function(){"use strict";function a(r,e,t){if(!(this instanceof a))return new a(r,e,t);this.name=r||"unknown",this.args=e||[],this.data=t||{},this.type=t&&t.type||"basic",this.fn=t&&t.fn||"handler","changer"===this.type&&("handler"===this.fn?this.instance=t&&t.instance||null:this.descriptor=t&&t.descriptor||null)}a.create=function(r,e,t){if(!r||"string"!=typeof r||!r.trim())throw new TypeError("Invalid macro name.");return e&&e instanceof Array||(e=[]),t&&"object"==typeof t||(t={type:"basic",fn:"handler"}),new a(r,e,t)},Object.assign(a.prototype,{clone:function(){return a.create(this.name,this.args,this.data)},syntax:function(){return"("+this.name+":)"},error:function(r,e){var t="Error in the "+this.syntax()+" macro: "+r;return e&&alert(t),console.warn("HARLOWE CUSTOM MACRO ERROR -> ",t),new Error(r)},typeCheck:function(r){r&&r instanceof Array||(r=Harlowe.helpers.arrayify(arguments));var n=this,o=[];if(r.forEach(function(r,e){var t=e+1,a=[];"string"==typeof r&&("any"===(a=r.includes("|")?r.split("|").map(function(r){return r.trim().toLowerCase()}):[r.trim().toLowerCase()])[0]||a.some(function(r){return typeof n.args[e]===r})||o.push("argument "+t+" should be a(n) "+a.join(" or ")))}),o.length)return n.error(o.join("; "))}}),window.Harlowe=Object.assign(window.Harlowe,{MacroContext:a})}(),function(){"use strict";var c=Harlowe.API_ACCESS.MACROS,l=Harlowe.API_ACCESS.CHANGER;window.Harlowe=Object.assign(window.Harlowe||{},{macro:function(r,e,t){if(!r||"string"!=typeof r||!r.trim())throw new TypeError("Invalid macro name.");if(!e||"function"!=typeof e)throw new TypeError("Invalid macro handler.");var a,n,o,i,s;t&&"function"==typeof t?(o=r,i=e,s=t,c.addChanger(o,function(){var r=Harlowe.helpers.arrayify(arguments,1),e=l.create(o,r),t=Harlowe.MacroContext.create(o,r,{type:"changer",fn:"handler",instance:e});return i.apply(t,r),e},function(){var r=Harlowe.helpers.arrayify(arguments),e=r.shift(),t=Harlowe.MacroContext.create(o,r,{type:"changer",fn:"changer",descriptor:e});s.apply(t,r)},c.TypeSignature.zeroOrMore(c.TypeSignature.Any))):(a=r,n=e,c.add(a,function(){var r=Harlowe.helpers.arrayify(arguments,1),e=Harlowe.MacroContext.create(a,r,{type:"basic",fn:"handler"}),t=n.apply(e,r);return null==t?"":t},c.TypeSignature.zeroOrMore(c.TypeSignature.Any)))}})}(),function(){"use strict";var t=Harlowe.API_ACCESS.STATE,e=Harlowe.API_ACCESS.ENGINE;function a(){return t.passage}window.Harlowe=Object.assign(window.Harlowe||{},{passage:a,tags:function(r){r=r||a();try{var e=Harlowe.helpers.getPassageData(r).attr("tags");return e?e.split(" "):[]}catch(r){return console.warn(r.message),[]}},goto:function(r){return e.goToPassage(r)},variable:function(r,e){if("$"!==r[0])throw new Error('cannot access variable "'+r+'"');if(r=r.substr(1),void 0!==e){if(!Harlowe.helpers.isSerialisable(e))throw new Error('The value passed to variable "'+r+'" cannot be serialized.');t.variables[r]=e}return t.variables[r]},visited:function(r){return t.passageNameVisited(r||a())},hasVisited:function(r){return 0<t.passageNameVisited(r||a())},turns:function(){return t.pastLength}})}();

/* # CTF 3 Start */

setup.ctf3 = function() {
	   document.getElementById("hint-button").addEventListener("click", eventOnClickHandler);

}

function eventOnClickHandler(event) {
	alert("ALERT");
}

/* # CTF 3 End */

// end Harlowe Macro Framework


:: CTF 1 {"position":"350,925","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>

tw-story {
 background-image: url('img/ctf1/pc_rahmen1.png');
 background-size: 110%;

  /* Center and scale the image nicely */
  background-position: center;
  background-repeat: no-repeat;
}

html {
	overflow-y: hidden !important; /*Disabe sroll*/
}


.twine-background-login {
	position: inherit;
	background-color:  white;
	width: 500px;
}

.login-contianer{
    text-align: -webkit-center;
	height: 500px;
}

#ui-bar {
display: none;
}

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}

.headline {
    margin-top: -7rem;
    margin-bottom: 7rem;
}

</style>


<script> setup.ctf1(); </script>


<div class="headline">Your forgot your password, maybe it is possible to find it, somewhere else. </div>

<span id='img-pop'>Click me.</span>

<script>
$('#img-pop').click(function() {
	window.parent.postMessage('hello', '*');
});
</script>

<div class="container is-fluidno login-contianer">
   <form method="POST" class="box twine-background-login">
      <div class="field">
        <label class="label">Username</label>
        <div class="control">
          <input class="input" id="user" type="text" placeholder="some name">
        </div>
      </div>
      <div class="field">
        <label class="label">Password</label>
        <div class="control">
          <input class="input" id="password" type="password" placeholder="some password">
        </div>
      </div>
      <button id="ssss" class="button is-primary">Sign in</button>
    </form>
  </div>
  
  (link-repeat: "Give me a hint",(css:"padding:0px"))[(alert: "Can you find a method that will be executed when you press the button?")]
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a second hint")[(alert: "What does the JavaScript funktion atob() do?")]

<!--Button next -->
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Resume Story->4.p]]
</div>
<!--End of button next -->


:: CTF 10 {"position":"1400,400","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>

html {
	overflow-y: hidden !important; /*Disabe sroll*/
}

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}

tw-story {
 background-image: url('img/4all/pc_rahmen.png');
 padding: inherit;
 float: initial;
 width: inherit;
 height: inherit;
}


tw-passage {
 margin-left: 15%;
 width: 70%;
 height: 100%;
 padding: 1.5%;
 font-family: Arial, Helvetica, sans-serif;
 font-size:1.2rem; 
 color:#000;
}

.webbrowser {
  float: inherit;
  width: 70%;
  height: 54%;
  margin-left: 15.5%;
  margin-top: -4%;
  border: 2px solid black;
  background: white;
}


tw-story tw-consecutive-br {
    height: 1.7% !important;
}

:root {
    --color: #aaa;
    --background: #000;
    --size: 1;
    /* --glow: 1 */
    --animation: terminal-blink;
}

</style>


(set: _info to "")


(if: $ctfs contains "ctf10")[]
(else:)[(alert: _info)]

(link-repeat: "What should I do?")[(alert: _info)]
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/2.34.0/js/jquery.terminal.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jquery.terminal/css/jquery.terminal.min.css"/>
<script src="https://cdn.jsdelivr.net/npm/jquery.terminal/js/jquery.terminal.js"></script>


<tw-consecutive-br></tw-consecutive-br>
<script>
$('terminal').terminal({
    hello: function(what) {
        this.echo('Hello, ' + what + '. Wellcome to this terminal.');
        // this string can be written with ES6 - uncomment to test
        // this.echo(`Hello, ${what}. Wellcome to this terminal.`);
    }
}, {
    greetings: 'My First Web Terminal'
});
</script>
<terminal>TerminaL: </terminal>

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>

(link-repeat: "Give me a hint",(css:"padding:0px"))[(alert: "")]
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a second hint")[(alert: "")]


(Set: _solution to "<#script> alert(\"XSS\");</script>")
(if: $debug is true)[solution is: (click: "solution")[_solution]]

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>


:: CTF 2 {"position":"350,1300","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<h3>Do I live alone? </h3>

Great! Now you know your name, but nothing else. 

After the thorough search on the book shelf with little progress, you feel helpless. You take a seat and try to calm your nervs a bit. However, a painting hanging on the wall infront of you keeps garnering your attention. There is something about it you can't put your finger on..
<style>  
img {  
max-width: 100%;  
height: auto;  
}  
</style>  
<img src= "./img/ctf2/ctf2.jpg"></img>

Maybe taking a closer look at it is not a bad idea. 

Hint: A photo is way more that a bunch of colored pixels. The details of a picture can reveal some of its secrets (look in the metadata).
<!--Button next -->
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Resume Story->7.p]]
</div>
<!--End of button next -->


:: CTF 3 {"position":"800,275","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">


(set: _whatToDo to "You should be taking a closer look at things...")

<!--(if: $onTimeShow is false)
(if: $onTimeShow is true)[ (alert: _info)]
(if: $onTimeShow is true)[ (set: $onTimeShow to false)]-->

[(alert: _whatToDo)]


<title>Challenge</title>
</head>
<body>



<style>
body {
  background-image: url('img_girl.jpg');
}
</style>
<h1>Capture the Flag</h1>
<p>Capture the Flag (CTF) in computer security is an exercise in which "flags" are secretly hidden in purposefully-vulnerable programs or websites. It can either be for competitive or educational purposes. Competitors steal flags either from other competitors (attack/defense-style CTFs) or from the organizers (jeopardy-style challenges). Several variations exist. Competitions can including hiding flags in hardware devices, they can be both online or in-person, and can be advanced or entry-level. The game is based on the traditional outdoor sport of the same name.</p>
<p> Source: Wikipedia </p>

 <a class="fixedButton1" href>
         <button class="addMore" title="maybe there's something to inspect">hint</button>
 </a>


<!--flag{12_234_ghuzt5r}-->
</body>
</html>


:: CTF 4 {"position":"350,1050","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>

html {
	overflow-y: hidden !important; /*Disabe sroll*/
}

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}

tw-story {
 background-image: url('img/4all/pc_rahmen.png');
 padding: inherit;
 float: initial;
 width: inherit;
 height: inherit;
}


tw-passage {
 margin-left: 15%;
 width: 70%;
 height: 100%;
 padding: 1.5%;
 font-family: Arial, Helvetica, sans-serif;
 font-size:1.2rem; 
 color:#000;
}

.webbrowser {
  float: inherit;
  width: 70%;
  height: 54%;
  margin-left: 15.5%;
  margin-top: -4%;
  border: 2px solid black;
  background: white;
}

#tab {
    float: inherit;
    width: 100%;
    height: 100%;
    background: url(img/ctf4/webbrowser_header.PNG) 0 0 no-repeat;
    background-repeat: repeat-x;
    border: 1px solid #333;
}

.url {
	padding: 0.1em;
    align-self: center;
}

.controls {
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;
    display: -webkit-flex;
    margin-top: 47px;
    padding: 2px;
}

.urlbutton {
    margin-left: auto;
    align-self: center;
    padding-right: 1em;
}

.input {
    margin-right: auto;
}


iframe {
 width: inherit;
 height: inherit
}

tw-story tw-consecutive-br {
    height: 1.7% !important;
}

</style>


(set: _info to "Cross-Site Scripting (XSS) is a type of client-side injection attack where a malicious script is injected into a legitimate website and executed. XSS attacks can occur when an attacker try to uses a web application to send malicious code, usually in the form of a browser-side script, to another end user. 

Vulnerabilities that enable these attacks are widespread and occur wherever a web application ''uses input from a user within the output it generates without validating or encoding it.''


In this challenge you can try to insert a JavaScript alert() in the frame below. This  JavaScript alert() should show up a  pop up window.

For this CTF please imagine there is vulnerable Webseite on the Webserver (https://twine.ctf)
It is not necessary to look into the the code.
")

<!--(if: $onTimeShow is false)
(if: $onTimeShow is true)[ (alert: _info)]
(if: $onTimeShow is true)[ (set: $onTimeShow to false)]-->

(if: $ctfs contains "ctf4")[]
(else:)[(alert: _info)]

(link-repeat: "What should I do?")[(alert: _info)]

<tw-consecutive-br></tw-consecutive-br>

<div class="webbrowser"> 
	<div id="tab">
		<div class="controls">
            <span class="url label">URL:</span>
            <input id="input" class="urlbar input" type="text" value="https://twine.ctf/ctf4.html">
            <input id="surfbutton" class="button is-success urlbutton" type="Submit" onclick="setup.ctf4_updateFrame()" value="Surf">
           </div>
            <iframe src="static/ctf4/s.html" title="Google"></iframe>
    </div>

</div>
<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a hint",(css:"padding:0px"))[(alert: "You need to insert some javascript, maybe the script tag helps")]
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a second hint")[(alert: "It is possible to pop an alert with javascript \"alert()\", you should only add some script-tags")]

(Set: _solution to "<#script> alert(\"XSS\");</script>")

(if: $debug is true)[solution is: (click: "solution")[_solution]]

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>


:: CTF4_end {"position":"575,1050","size":"100,100"}
(set: $ctfs to it + (a: "ctf4"))

You made it!


:: CTF 5 {"position":"350,1175","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}

html {
	overflow-y: hidden !important; /*Disabe sroll*/
}


tw-story {
 background-image: url('img/4all/pc_rahmen.png');
 background-size: 110%;
 background-position-x: -6.5rem;
 background-repeat: no-repeat;
  
 margin: 0;
 padding: 1rem;
 white-space: normal;
 width: 100%
}


tw-passage {
 width: 83rem;
 height: 60rem;
 margin:auto;
 padding: 1.5rem;
 font-family: Arial, Helvetica, sans-serif;
 font-size:1.2rem; color:#000;
 text-align: left;
}

.webbrowser {
  max-width: 1rem;
  min-width: fit-content;
  border: 2px solid black;
  margin: auto;
  background: white;
  margin-top: -4.5rem;
}

#tab {
    background: url(img/ctf5/webbrowser_header.PNG) 0 0 no-repeat;
    margin: 0px;
    width: 55rem;
    height: 30rem;
    border: 1px solid #333;
}

.url {
	padding: 0.1em;
    align-self: center;
}

.controls {
    margin: 0 auto;
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;
    display: -webkit-flex;
    margin-top: 47px;
    padding: 2px;
}

.urlbutton {
    margin-left: auto;
    align-self: center;
    padding-right: 1em;
}

.input {
    margin-right: auto;
}


iframe {
 width: inherit;
 height: inherit
}
</style>


(set: _info to "This time, you should also insert an alert(). Use a special script tag to archive it. It is not necessary to look into the the code.")

<!--(if: $onTimeShow is false)
(if: $onTimeShow is true)[ (alert: _info)]
(if: $onTimeShow is true)[ (set: $onTimeShow to false)]-->

(if: $ctfs contains "ctf5")[]
(else:)[(alert: _info)]

(link-repeat: "What should I do?")[(alert: _info)]

<tw-consecutive-br></tw-consecutive-br>

<div class="webbrowser"> 
	<div id="tab">
		<div class="controls">
            <span class="url label">URL:</span>
            <input id="input" class="urlbar input" type="text" value="https://twine.ctf/ctf5.html">
            <input id="surfbutton" class="button is-success urlbutton" type="Submit" onclick="setup.ctf5_updateFrame()" value="Surf">
           </div>
            <iframe src="static/ctf5/t.html" title="Google"></iframe>
    </div>

</div>
<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a hint",(css:"padding:0px"))[(alert: "Maybe there are other html tags that are vulnerable?")]
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a second hint")[(alert: "Think of an image tag, could you insert same javascript here (onerror= and src=)")]

(Set: _solution to "<#script> src='#' onerror=alert(1) </script>")

(if: $debug is true)[solution is: (click: "solution")[_solution]]

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>


:: CTF5_end {"position":"500,1175","size":"100,100"}
(set: $ctfs to it + (a: "ctf5"))

You made it!

[[Main Page->MainPage]]
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Resume Story->6.p]]
</div>
<!--End of button next -->


:: CTF 6 {"position":"1300,275","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<style>

html {
	overflow-y: hidden !important; /*Disabe sroll*/
}

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}


tw-story {
 background-image: url('img/4all/pc_rahmen.png');
 background-size: 110%;
 background-position-x: -6.5rem;
 background-repeat: no-repeat;
  
 margin: 0;
 padding: 1rem;
 white-space: normal;
 width: 100%;
 /*overflow-y: auto; Scroll y*/
}


tw-passage {
 width: 83rem;
 height: 60rem;
 margin:auto;
 padding: 1.5rem;
 font-family: Arial, Helvetica, sans-serif;
 font-size:1.2rem; color:#000;
 text-align: left;
}

.webbrowser {
  max-width: 1rem;
  min-width: fit-content;
  border: 2px solid black;
  margin: auto;
  background: white;
  margin-top: -4.5rem;
}

#tab {
    background: url(img/ctf6/webbrowser_header.PNG) 0 0 no-repeat;
    margin: 0px;
    width: 55rem;
    height: 30rem;
    border: 1px solid #333;
}

.url {
	padding: 0.1em;
    align-self: center;
}

.controls {
    margin: 0 auto;
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;
    display: -webkit-flex;
    margin-top: 47px;
    padding: 2px;
}

.urlbutton {
    margin-left: auto;
    align-self: center;
    padding-right: 1em;
}

.input {
    margin-right: auto;
}


iframe {
 width: inherit;
 height: inherit
}
</style>

<!--TmpVar is not allowed -->
(set: $ctf6_code to "function chooseTab(num) {  
function $initHighlight(block, cls) {
  try {
    if (cls.search(/x-highlightx/) != -1)
      return process(block, true, 0x0F) +
             ` class=\"${cls}\"`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return false;
}

export  $initHighlight;

// Tell parent we've changed the tab
top.postMessage(self.location.toString(), '*');
}")

(set: _info to "")
(if: $ctfs contains "ctf6")[]
(else:)[(alert: _info)]
(link-repeat: "What should I do?")[(alert: _info)]

<script> 
	setup.ctf6_reset()
</script>

<tw-consecutive-br></tw-consecutive-br>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">



<div class="webbrowser"> 
	<div id="tab">
		<div class="controls">
            <span class="url label">URL:</span>
            <input id="input" class="urlbar input" type="text" value="https://twine.ctf/ctf6.html">
            <input id="surfbutton" class="button is-success urlbutton" type="Submit" onclick="setup.ctf6_updateFrame()" value="Surf">
           </div>
            <iframe scrolling="yes" src="static/ctf6/u.html" title="Google"></iframe>
    </div>
</div>
<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Show Implemation Code")[(alert: "
	<pre><code id=\"code\" class=\"language-javascript\">
    </code></pre>

<script> 
  setup.ctf6_showCode();
  hljs.highlightAll();  
</script>")]

<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a hint",(css:"padding:0px"))[(alert: "xxx")]
<tw-consecutive-br></tw-consecutive-br>
(link-repeat: "Give me a second hint")[(alert: "xxx")]

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>

(Set: _solution to "<#script> src='#' onerror=alert(1) </script>")
(if: $debug is true)[solution is: (click: "solution")[_solution]]

<tw-consecutive-br></tw-consecutive-br>
<tw-consecutive-br></tw-consecutive-br>


:: CTF6_end {"position":"1500,250","size":"100,100"}
(set: $ctfs to it + (a: "ctf6"))

<script> 
	setup.ctf6_reset()
</script>

You made it!

[[Main Page->MainPage]]
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Resume Story (fehlt noch)->x.p]]
</div>
<!--End of button next -->


:: CTF 7 {"position":"350,800","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<h1>Who even am I?</h1>

<img src= "https://i0.hippopx.com/photos/440/457/108/books-shelf-school-library-preview.jpg">

Right behind the entrance you find you find big shelfs full of leaflets and local advertisements. According to activist friends the search warrants for you are spread everywhere. So, you’re bound to find some of them here. You start looking around those shelfs desperate for information. 
<div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<Style>
#first{
background-color: var(--purple) !important;
}
</Style>
[[<button id="first" class="button is-danger is-rounded">First Shelf->First Shelf]]

[[<button id="first" class="button is-danger is-rounded">Second Shelf->Second Shelf]]

[[<button id="first" class="button is-danger is-rounded">Third Shelf->Third Shelf]]

[[<button id="first" class="button is-danger is-rounded">Fourth Shelf->Fourth Shelf]]

[[<button id="first" class="button is-danger is-rounded">Fifth Shelf->Fifth Shelf]]
</div>

<!--My first name ist: John -->

However, these shelfs are stacked with material. A search on the surface level is not enough. Further inspection is needed. 

Enter the flag for “who even am I?”: ___

Hints: open your inspector view and have a look at the website’s resources. 
<div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<Style>
#first{
background-color: var(--purple) !important;
}
</Style>

[[<button id="first" class="button is-danger is-rounded">resume story->3.p]]
</div>

<link rel="stylesheet" href=css/ctf7/styles.css></link>


:: First Shelf {"position":"500,800","size":"100,100"}
Nothing really usefull here


:: Second Shelf {"position":"625,800","size":"100,100"}
No usefull information here..


:: Third Shelf {"position":"750,800","size":"100,100"}
Nothing here either..


:: Fourth Shelf {"position":"875,800","size":"100,100"}
This search has lead me nowhere sofar..


:: Fifth Shelf {"position":"1000,800","size":"100,100"}
yup.. I did all of that for nothing :(


:: CTF 8 {"position":"950,275","size":"100,100"}
Download the file and check for valuable information. 
There might be something more to it than what you first see...

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<head>
<title>Center align button</title>
    <style>
        body {
            text-align: center;
        }
    </style>
<head/>

 
<body>

  <a class="fixedButton1" href>
         <button class="addMore" title="don't focus on the image itself">hint</button>
 </a>
  
  <button type="submit" onclick="window.open('static/ctf8/my_office')">Download</button>
</body>


:: CTF 9 {"position":"350,1675","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<h1>A random file in your home directory </h1>

Within the chaos on your personal drive you find a file that doesn’t seem very bad to start with. It seems like it used to hold some secretive information, but someone tried to mess it up. You’re an expert on reverse engineering. This should be an easy task for you. 

<div>
<code>
public class ctf9 {<br>
    static char [] theSecret;<br>
    public static void encryptSecret(){<br>
        theSecret = new char [14]; <br>
        theSecret [3] = 'n'; <br>
        theSecret [4] = 'o'; <br>
        theSecret [0] = 'B'; <br>
        theSecret [7] = 'l'; <br>
        theSecret [2] = 'u'; <br>
        theSecret [8] = 'l'; <br>
        theSecret [10] = 'd'; <br>
        theSecret [12] = 'e'; <br>
        theSecret [13] = 'r'; <br>
        theSecret [11] = 'H'; <br>
        theSecret [1] = 'r'; <br>
        theSecret [9] = 'e'; <br>
        theSecret [5] = 'K'; <br>
        theSecret [6] = 'i'; <br>
    }<br>
     public static String conclusion(){<br>
        String conc = "This case is unsolvable. Give up!";<br>
        return  conc;<br>
    }<br>
    public static void main(String[] args) {<br>
      System.out.println(conclusion());<br>
    }<br>
}
</code>
</div>

Hint: Have you tried working with char arrays in java?

<!--Button next -->
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Resume Story->10.p]]
</div>
<!--End of button next -->


:: newMainPage {"position":"75,125","size":"100,100"}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Memory Loss: Find Your Way Back</title>
    <link rel="stylesheet" href="CSS/mainpage/style.css">
</head>

<style>
/*
TODO: Add portrait mode
TODO: Rework wires in Ai 
TODO: Add portrait mode of wires
*/

@import url("https://fonts.cdnfonts.com/css/ocr-a-extended");

* {
  font-family: "OCR A Extended", sans-serif;
  color: #9b9b9b;
}

tw-sidebar {
  display: none;
}

body {
  width: 100%;
  height: 100%;
}

main {
  width: 100%;
  height: 100%;
}

header {
  height: 25vh;
  display: flex;
  background-image: url(src/header/blurred_header.svg);
  background-repeat: no-repeat;
}

header .logo img {
  height: 10vh;
  padding: 5vh;
}

nav ul {
  list-style: none;
  display: flex;
  justify-content: space-between;
  flex-direction: row;
}

nav li a {
  padding: 2vw;
  font-size: 1.6vw;
  color: #9b9b9b;
  text-decoration: none;
  text-shadow: 4px 4px 5px #000000;
}

nav .active a {
  color: #f79e00;
  text-decoration: none;
  text-shadow: 4px 4px 5px #000000;
}

.sec1 {
  height: 60%;
  padding: 5vw;
  display: flex;
  justify-content: space-between;
  flex-direction: row;
}

/* TODO: Check Background shadow */
section .usb-stick img {
  height: 50vh;
  padding-left: 10vw;
}

.preview {
  position: relative;
}

/*
.preview_bg {
  display: flex;
  justify-content: center;
  align-items: center;
}
*/
.preview_bg img {
  position: relative;
  z-index: 1;

  height: 50vh;
}

.rectangle {
  position: absolute;
  bottom: 0;
  z-index: 2;

  display: flex;
  justify-content: center;
  align-items: center;

  height: 20vh;
  width: 100%;

  border-radius: 0px 0px 45px 45px;

  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0)
  );

  backdrop-filter: blur(5px);

  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.outer .startButton {
  display: flex;
  justify-content: center;
  align-items: center;

  z-index: 3;

  height: 5.5em;
  width: 25em;

  border-radius: 45px 45px 45px 45px;
  background-color: #f79e00;
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.outer .startButton a {
  font-size: 5vh;
  color: #1e1e1e;
  text-decoration: none;
  text-shadow: 2px 2px 4px #000000;
}

body {
  background-image: url(src/background/wires_landscape.svg),
    url(src/background/background_landscape.svg);
  background-repeat: no-repeat, no-repeat;
  background-size: 100%, cover;
  background-attachment: local, fixed;
  box-sizing: border-box;
}

</style>

<body>
<main>
  <header>
    <div class="logo">
      <img src="src/header/logo.svg" alt="Logo">
    </div>
    <nav>
      <ul>
        <li class="active">
          <a href="#">Home</a>
        </li>
        <li>
          <a href="#">CTFs</a>
        </li>
        <li>
          <a href="#">Achievements</a>
        </li>
        <li>
          <a href="#">Tutorial</a>
        </li>
        <li>
          <a href="#">Settings</a>
        </li>
      </ul>
    </nav>
  </header>

  <section class="sec1">
    <div class="usb-stick">
      <img src="src/svg/usb_stick.svg" alt="usb-stick">
    </div>
    <div class="preview">
      <div class="preview_bg">
        <img src="src/svg/preview_bg.svg" alt="preview">
        <div class="rectangle">
          <div class="outer">
            <div class="start">
            </div>
            <div class="startButton">
              <a href="#">Start</a>
            </div>
          </div>
        </div> 
      </div>
    </div> 
  </section>

  <section class="sec2">
    <h1>Requirements</h1>
    <h2>Tools</h2>
  </section>

  <footer>
    <h1>Information about Developer</h1>
  </footer>
  
  </main>   
</body>


:: initMain {"position":"75,25","size":"100,100"}
<!--only for init-->

<!-- :: init [startup] -->
<!-- it is always a good idea to initialize your variables, but with arrays it is particularly important -->
(set: $ctfs to (a:))


(go-to: "MainPage")


:: MainPage {"position":"200,25","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<!--Button Achievments -->
<div>
[[<button class="button is-danger is-rounded color_purple" style="float: right">Achievments->CTFs]]
</div>
<!--End of button Achievments -->

Hello there, 

Welcome to our CTF (Capture the Flag) Game. Do you want to improve your cyber security skills in a fun way? Well then you're in the right place! Here you will get to learn how to solve some fun CTF-Challanges along an interesting storyline. Solve the challanges to discover your hidden past and save your future. Are you ready? Then let's go!

[[<button class="button is-large is-danger is-rounded color_purple">Start the Adventure!</button> ->Story]]

[[<button class="button is-large is-danger is-rounded color_purple">Inspect new start site</button> ->newMainPage]]

You can skip the story and go straight to the challanges:

[[<button class="button is-danger is-rounded color_purple">Start first challange</button> ->CTF 1]]

or you can jump straight to you favorit challange: 

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 1 -XXS - difficulty level: 1->CTF 1]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 2 - Forensics - difficulty level: 1->CTF 2]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 3 - Web exploitation - difficulty level: 1->CTF 3]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 4 - XXS - difficulty level: 2->CTF 4]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 5 - XXS - difficulty level: 3->CTF 5]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 6 - XXS - difficulty level: 3->CTF 6]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 7 - Web exploitation - difficulty level: 1->CTF 7]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 8 -  Forensics - difficulty level: 1->CTF 8]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 9 - reverse engineering - difficulty level: 1->CTF 9]]

[[<button class="color_purple button is-fullwidth is-danger is-rounded">CTF 10 - coming soon->CTF 10]]

Debug Mode with all solutions is: $debug 
(Set: $debug to true)
<!--(Set: $debug to false)-->
<!-- :: init [startup] -->
<!-- it is always a good idea to initialize your variables, but with arrays it is particularly important -->
(set: $ctfs to (a:))


:: Story {"position":"175,350","size":"100,100"}
You just woke up from what it feels like a decade long nap. You look around to find yourself in an unrecognizable place. You start freaking out...

Some strangers hear you fussing around. They enter the room where you are lying. “Don’t worry. You’re in a safe place.” They interduce themselves as a group of activists. A couple of months ago, they found you unconscious on the side of a street and decided to help you. They recognized you from the search warrant spread all over the city. “A sketchy group has been looking for you intensely.” 

<!--Button next -->
<div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
[[<button id="resume-btn" class="button is-danger is-rounded">next->1.p]]
</div>
<!--End of button next -->


:: CTFs {"position":"400,50","size":"100,100"}
List with all CTFs and its status

<!--(set: $ctfs to it + (a:"ctf1"))
(set: $ctfs to it + (a:"ctf2"))
(set: $ctfs to it + (a:"ctf3"))-->



(if: $ctfs's length is 0)[\
    no ctf finished 
](else:)[\
    <!-- we iterate over the array and print each item -->\
    (for: each _item, ...$ctfs)[\
        _item (unless: $ctfs's last is _item)[, ]\
    ].
]


:: 1.p {"position":"175,550","size":"100,100"}
To protect you, they took you to their headquarters, took care of you and kept you a secret to ensure your safety. 

“I don’t seem to remember anything. Who even am I?”
To your surprise they respond, “we don’t know. We couldn’t find out who you are.”
However, what they know for sure is that he might be in a great danger. 
You’re tiered. You feel helpless and lost. But you can’t just sit there a do nothing about it. There is a fire burning inside of you. A strong feeling telling you to hurry up. So, you muster every single ounce of energy left inside of you and get up. 
“Thank you for your kindness. But I need to go.” is what you tell the activists before starting your journey to uncover your past and save your future
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">next->2.p]]
</div>
<!--End of button next -->


:: 2.p {"position":"175,800","size":"100,100"}
After wondering the streets for a while, you spot a big library at the end of the street. A library seems like a good place to start you search. Over there, you can have access to many resources that will help you with your search. So, to the library you head. 

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Start Challange->CTF 7]]
</div>
<!--End of button next -->


:: 3.p {"position":"175,925","size":"100,100"}
<h1>Wait... but how can I log in to my account?</h1>
Finding your name is a great start. But you need to learn more about yourself. So, you decide to log on to a computer and research more on the internet. It appears you already have an account at the library. You just need to find a way to enter it.

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Start Challange->CTF 1]]
</div>
<!--End of button next -->


:: 4.p {"position":"175,1050","size":"100,100"}
<h1>Let the search begin!</h1>

You’re in! Naturally the first thing you want to do is to navigate to the web browser and start your search. However, this web browser is behaving weirdly. Whenever you type in your name it doesn’t give you any useful results. "Maybe the bad guy’s looking for me have restricted the search.”
You may have forgot a lot, but you haven’t lost your computer skills. But you know how to crack it.

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Start Challange->CTF 4]]
</div>
<!--End of button next -->


:: 5.p {"position":"175,1175","size":"100,100"}
<h1>I just wanna go home...  </h1>
It has been a long day and this search is taking a toll on you. You just want to go home. Now that you hacked the browser and you know you log-in data, you decide to log into your account and find out more personal information about you self. Especially you home address. Unfortunately, it seems like the bad guys knew that you're going to do that at some point. So, they somehow gained access to your account and ruined the search function. You have no other choice but to use you XSS-Skills and hack the website. 

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">next->CTF 5]]
</div>
<!--End of button next -->


:: 6.p {"position":"175,1300","size":"100,100"}
Finally! You opened your account and found some information about yourself. You’re done for the day it's time to go home. Before leaving the library, you take a map of your city. You mark your route home. Lucky you! It's not a long distance. So, you walk your way back home. 

You stand in front of the building where you live and you at once recognize it. You inter the building looking for your apartment feeling extremely uneasy. Since you arrived your heart is beating extremely fast. 
 
You know something important that changed your life forever happened here, but you can't remember it. 

You end up finding your apartment in the first floor. The door is open! It seems like a tornado just went by and completely messed up the place. “It must be the bad guys who are looking for me” you say to yourself. However, its already late at night. No time to explore around now. You need to rest. Tomorrow you can start exploring around the place.

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">next->CTF 2]]
</div>
<!--End of button next -->


:: 7.p {"position":"175,1425","size":"100,100"}
Now, it all coming back to you. It was a gift from your girlfriend. She drew it for you herself. The moment this memory awakens in your brain, deep grieve starts filling your heart. What happened to her. Where is she??

(Continuation of the girlfriend tragedy here maybe?)
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">next->8.p]]
</div>
<!--End of button next -->


:: 8.p {"position":"175,1550","size":"100,100"}
Under the ruins in your office, you find your PC. It seems like someone smashed it with a hammer. Not much of it can be salvaged. But this is not going to make you give up. You’re desperate for finding any thing that will help you remember. Your personal computer is definitely a very important piece of evidence for your search. Your pry the case of your PC open and start looking for the hard disk hoping that you can still save it. To your surprise it doesn’t look in a bad shape. You dismantle it from the ruined parts and decide to go to your activist friends for help. 

<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">next->9.p]]
</div>
<!--End of button next -->


:: 9.p {"position":"175,1675","size":"100,100"}
“I'm sure they have the tools that will help me extract some information out of it.”
You arrive at the headquarters hectic and stressed out. Your mood immediately changes after seeing everybody there so happy to see you again. They were worried something bad might have happened to you. You assure them that your find, but your search is far away from being done. You pull out the hard disk from your pocket and ask them if they can provide you with some equipment. And they did not disappoint. 
After some fiddling around you manage to connect the drive to a new computer. And voila! You’re in. However, from now on, things start going south. Your disk has been tampered with. Some files are incomplete. Others are encrypted or corrupted.  Extracting information form it is not going to be an easy task. 
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Start Challange ->CTF 9]]
</div>
<!--End of button next -->


:: 10.p {"position":"175,1800","size":"100,100"}
Coming soom. Stay tuned!
<!--Button next -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<div>
[[<button id="resume-btn" class="button is-danger is-rounded">Back to the main page->MainPage]]
</div>
<!--End of button next -->



:: StoryTitle
twine-ctf


:: StoryData
{
	"ifid": "DC4F9919-114F-42D0-AD6B-6D66F013AD8C",
	"format": "Harlowe",
	"format-version": "3.3.3",
	"start": "MainPage",
	"zoom": 1
}


:: Story JavaScript [script]
window.setup = window.setup || {};

/* # CTF 1 Start */

setup.start = function() {
	   document.getElementById("ssss").addEventListener("click", eventOnClickHandler);

}

function eventOnClickHandler(event) {
	var user = btoa(document.getElementById("user").value.replace(/=/g, ""));
    var pass = btoa(document.getElementById("password").value.replace(/=/g, ""));

  	return "d3d3LWFkbWlu" !== user ? alert("Incorrect Username or Password") : "a2V5TWVtb3J5KHN1cGVyU2VjcmV0cGFzc3cwcmQxMjMp" !== pass ? alert("Incorrect Username or Password") : void alert(`Correct Username and Password! \nYour flag is ${atob(pass)}.`)
  
}

/* # CTF 1 End */



/* # CTF 4 Start */
setup.ctf4 = function() {
  	   document.getElementById("surfbutton").addEventListener("click", updateFrame());
}


function updateFrame() {
  var urlbar = document.getElementById('input'); 
  var url = urlbar.value;
  
  // Make sure that the URL points to the frame of the current level
  //var frameLink = document.createElement('a');
  //frameLink.href = url;

  if (!url.startsWith('https://twine.ctf/ctf4.html')) {
       alert("Sorry, I can't navigate the frame to that URL.");
       return;
  } else {
    var arg = url.replace("https://twine.ctf/ctf4.html", "");
    var frame = document.querySelector('iframe');
    frame.src = "static/ctf4/s.html" + arg; 
    frame.contentWindow.postMessage(url, "*");
  }

};


/* # CTF 4 End */


:: CTF 1 {"position":"800,25","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
<!--TODO Link-->

<link rel="stylesheet" href="css/main.css"> 


<script> setup.start(); </script>


<html>
<h1 style="padding:20px">Your forgot your password for your pc, maybe it is possible to find it, somewhere else.  </h1>
<a></a>
<div class="container is-fluid login-contianer">
   <form method="POST" class="box twine-background-login">
      <div class="field">
        <label class="label">Username</label>
        <div class="control">
          <input class="input" id="user" for"username" type="text" placeholder="...">
        </div>
      </div>
      <div class="field">
        <label class="label">Password</label>
        <div class="control">
          <input class="input" id="password" for"password" type="password" placeholder="...">
        </div>
      </div>
      <button id="ssss" class="button is-primary">Sign in</button>
    </form>
  </div>

</html>


:: CTF 2 {"position":"800,175","size":"100,100"}
crf2


:: CTF 3 {"position":"800,325","size":"100,100"}
ctf3


:: MainPage {"position":"175,100","size":"100,100"}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<style>
#first    {color: red;}
</style>

Hello, Welcome to our litte CTF Challenge Game. In this game you will learn something about same basic CTF Challenges.  Capture the Flag (CTF) is a cybersecurity competition that is used as a test of security skills. 
...
Olea schreib mal was schÃ¶nes
[[Start Story->Story]]

Hello World

<!--Comment Text
<button id="first" class="button is-rounded">Rounded</button>
<button class="button is-primary is-rounded">Rounded</button>
<button class="button is-link is-rounded">Rounded</button>
<button class="button is-info is-rounded">Rounded</button>
<button class="button is-success is-rounded">Rounded</button>
<button class="button is-danger is-rounded">Rounded</button>
-->

Overview of all challanges with explanations:
[[CTF 1->CTF 1]]
[[CTF 2->CTF 2]]
[[CTF 3->CTF 3]]
[[CTF 4->CTF 4]]
[[CTF 5->CTF 5]]
[[CTF 6->CTF 6]]
[[CTF 7->CTF 7]]
[[CTF 8->CTF 8]]
[[CTF 9->CTF 9]]

So soll das, CSS ist der King!
[[<button class="button is-danger is-rounded">Start Challenge 1</button> ->CTF 1]]


:: CTF 4 {"position":"1000,425","size":"100,100"}
<style>

br {
	max-height: 0px;
	visibility: hidden;
	display: none;
}

tw-story {
 background: linear-gradient(#330033, #000000);
 margin: 0;
 padding: 50px;
 white-space: normal;
 width: 100%
}


tw-passage {
 width: 70em;
 height: 50em;
 margin:auto;
 padding: 20px;
 border: solid #000 0.05em;
 border-radius: 0.2em;
 font-family: Arial, Helvetica, sans-serif;
 font-size:1.2rem; color:#000;
 text-align: left;
 background-color:#a6a6a6;
 box-shadow: #000 0.5em 0.5em 0;
}

.webbrowser {
  width: 300px;
  min-width: fit-content;
  border: 2px solid black;
  padding-top: 0px;
  padding-right: 0px;
  padding-bottom: 0px;
  padding-left: 0px;
  margin:auto;
  background: white;
}

#tab {
    background: url(img/ctf4/webbrowser_header.PNG) 0 0 no-repeat;
    padding: 0px;
    width: 55em;
    height: 21em;
    margin: 0px;
    border: 1px solid #333;
}

.url {
	padding: 0.1em;
    align-self: center;
}

.controls {
    margin: 0 auto;
    background-color: #f4f4f4;
    border: 1px solid #f0f0f0;
    padding: 2px 3px;
    border: 1px solid #999;
    border-bottom: none;
    display: -webkit-flex;
    margin-top: 47px;
    padding: 2px;
}

.urlbutton {
    margin-left: auto;
    align-self: center;
    padding-right: 1em;
}

.input {
    margin-right: auto;
}


iframe {
 width: inherit;
 height: inherit
}
</style>

<script> setup.ctf4(); </script>


Cross-Site Scripting (XSS) is a type of client-side injection attack where a malicious script is injected into a legitimate website and executed.  XSS attacks can occur when an attacker try to uses a web application to send malicious code, usually in the form of a browser-side script, to another end user. 

[more...]<more1|

{
|workarea>[]
(mouseover-replace: ?more1)[Vulnerabilities that enable these attacks are widespread and occur wherever a web application ''uses input from a user within the output it generates without validating or encoding it.''
<tw-consecutive-br></tw-consecutive-br>
[more...]<more2|]

(mouseover-replace: ?more2)[In this challenge you can try to insert a JavaScript alert() in the frame below. This  JavaScript alert() should show up a  pop up window\n\n.
<tw-consecutive-br></tw-consecutive-br>
[more...]<more3|]

(mouseover-replace: ?more3)[For this CTF please imagine there is vulnerable Webseite on the Webserver (https://twine.ctf)]
}


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">

<div class="webbrowser"> 
	<div id="tab">
		<div class="controls">
            <span class="url label">URL:</span>
            <input id="input" class="urlbar input" type="text" value="https://twine.ctf/ctf4.html">
            <input id="surfbutton" class="button is-success urlbutton" type="Submit" value="Surf">
           </div>
            <iframe src="static/ctf4/s.html" title="Google"></iframe>
    </div>

</div>


:: Story {"position":"175,350","size":"100,100"}
Hier beginnt die Story!

Main Start


:: Story1 {"position":"150,500","size":"100,100"}


:: Story2 {"position":"300,550","size":"100,100"}
[[CTF 3->CTF 3]]


:: CTF 5 {"position":"1375,325","size":"100,100"}
ctf5


:: CTF 6 {"position":"1525,325","size":"100,100"}
ctf6


:: CTF 7 {"position":"1675,325","size":"100,100"}
ctf7


:: CTF 8 {"position":"575,650","size":"100,100"}
ctf8


:: CTF 9 {"position":"575,800","size":"100,100"}
ctf9


